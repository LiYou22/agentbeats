name: Agentbeats Automated Release

on:
  push:
    branches: # only run if pushing to main or creating a tag
      - main
    tags:
      - 'v*.*.*'
    paths: # only run CI if these files are changed
      - 'src/**'
      - 'pyproject.toml'
      - 'MANIFEST.in'
      - 'README.md'

jobs:
  bump-and-tag:
    name: Bump version & create tag
    runs-on: ubuntu-latest
    # only run if pushing to main and commit message does not start with 'chore(release'
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 
             !startsWith(github.event.head_commit.message, 'chore(release') }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install semantic-release
        run: pip install python-semantic-release

      - name: Bump version & tag
        run: semantic-release version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-to-pypi:
    name: Build & Publish to PyPI
    runs-on: ubuntu-latest
    needs: bump-and-tag
    # only run if creating v*.*.* tag
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Checkout tagged code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build tools
        run: pip install build twine

      - name: Build distributions
        run: python -m build --sdist --wheel

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*
